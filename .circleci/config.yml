############
#
# Caches
#
# Caches may have a `v1-` prefix, since caches in CircleCI 2.0 are immutable.
# A prefix provides an easy way to invalidate a cache.  See https://circleci.com/docs/2.0/caching/#clearing-cache
#
############

version: "2.1"

executors:
  # `main` uses the `trussworks/circleci-docker-primary` docker image with a checkout of the mymove code
  primary:
    resource_class: small
    docker:
      - image: milmove/circleci-docker:86f3163991b707d1351cc01d2c9cdc2dbaae4e93
    environment:
      PIPENV_VENV_IN_PROJECT: true

jobs:

  # `test` is used to run pre-commit hooks on all files
  test:
    executor: primary
    steps:
      - checkout
      - setup_remote_docker:
          docker_layer_caching: false
      - restore_cache:
          keys:
            - v1-pre-commit-dot-cache-{{ checksum ".pre-commit-config.yaml" }}
      - restore_cache:  # ensure this step occurs *before* installing dependencies
          key: v1-pipenv-{{ .Branch }}-{{ checksum "Pipfile.lock" }}
      - run: pre-commit install-hooks
      - run:
          name: Run pre-commit tests
          command: pre-commit run --all-files
      - run:
          name: install dependencies
          command: |  # use pipenv to install dependencies
            pipenv sync -d
      - run:
          name: run tests
          command: |
            pipenv run pytest --junit-xml=junit/report.xml
      - store_test_results:
          path: ~/project/junit/report.xml
      - save_cache:
          key: v1-pre-commit-dot-cache-{{ checksum ".pre-commit-config.yaml" }}
          paths:
            - ~/.cache/pre-commit
      - save_cache:
          key: v1-pipenv-{{ .Branch }}-{{ checksum "Pipfile.lock" }}
          paths:
            - ".venv"

workflows:
  version: 2

  main:
    jobs:
      - test
