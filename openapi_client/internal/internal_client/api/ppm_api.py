"""
    my.move.mil

    The internal/website API for my.move.mil  # noqa: E501

    The version of the OpenAPI document: 0.0.1
    Contact: ppp@truss.works
    Generated by: https://openapi-generator.tech
"""


import re  # noqa: F401
import sys  # noqa: F401

from internal_client.api_client import ApiClient, Endpoint as _Endpoint
from internal_client.model_utils import (  # noqa: F401
    check_allowed_values,
    check_validations,
    date,
    datetime,
    file_type,
    none_type,
    validate_and_convert_types
)
from internal_client.model.create_personally_procured_move_payload import CreatePersonallyProcuredMovePayload
from internal_client.model.expense_summary_payload import ExpenseSummaryPayload
from internal_client.model.index_personally_procured_move_payload import IndexPersonallyProcuredMovePayload
from internal_client.model.ppm_estimate_range import PPMEstimateRange
from internal_client.model.ppm_incentive import PPMIncentive
from internal_client.model.ppm_sit_estimate import PPMSitEstimate
from internal_client.model.patch_personally_procured_move_payload import PatchPersonallyProcuredMovePayload
from internal_client.model.personally_procured_move_payload import PersonallyProcuredMovePayload
from internal_client.model.submit_personally_procured_move_payload import SubmitPersonallyProcuredMovePayload
from internal_client.model.update_personally_procured_move_payload import UpdatePersonallyProcuredMovePayload
from internal_client.model.upload_payload import UploadPayload


class PpmApi(object):
    """NOTE: This class is auto generated by OpenAPI Generator
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """

    def __init__(self, api_client=None):
        if api_client is None:
            api_client = ApiClient()
        self.api_client = api_client
        self.create_personally_procured_move_endpoint = _Endpoint(
            settings={
                'response_type': (PersonallyProcuredMovePayload,),
                'auth': [],
                'endpoint_path': '/moves/{moveId}/personally_procured_move',
                'operation_id': 'create_personally_procured_move',
                'http_method': 'POST',
                'servers': None,
            },
            params_map={
                'all': [
                    'move_id',
                    'create_personally_procured_move_payload',
                ],
                'required': [
                    'move_id',
                    'create_personally_procured_move_payload',
                ],
                'nullable': [
                ],
                'enum': [
                ],
                'validation': [
                ]
            },
            root_map={
                'validations': {
                },
                'allowed_values': {
                },
                'openapi_types': {
                    'move_id':
                        (str,),
                    'create_personally_procured_move_payload':
                        (CreatePersonallyProcuredMovePayload,),
                },
                'attribute_map': {
                    'move_id': 'moveId',
                },
                'location_map': {
                    'move_id': 'path',
                    'create_personally_procured_move_payload': 'body',
                },
                'collection_format_map': {
                }
            },
            headers_map={
                'accept': [
                    'application/json'
                ],
                'content_type': [
                    'application/json'
                ]
            },
            api_client=api_client
        )
        self.create_ppm_attachments_endpoint = _Endpoint(
            settings={
                'response_type': (UploadPayload,),
                'auth': [],
                'endpoint_path': '/personally_procured_moves/{personallyProcuredMoveId}/create_ppm_attachments',
                'operation_id': 'create_ppm_attachments',
                'http_method': 'POST',
                'servers': None,
            },
            params_map={
                'all': [
                    'personally_procured_move_id',
                    'doc_types',
                ],
                'required': [
                    'personally_procured_move_id',
                    'doc_types',
                ],
                'nullable': [
                ],
                'enum': [
                    'doc_types',
                ],
                'validation': [
                ]
            },
            root_map={
                'validations': {
                },
                'allowed_values': {
                    ('doc_types',): {

                        "OTHER": "OTHER",
                        "WEIGHT_TICKET": "WEIGHT_TICKET",
                        "STORAGE_EXPENSE": "STORAGE_EXPENSE",
                        "SHIPMENT_SUMMARY": "SHIPMENT_SUMMARY",
                        "EXPENSE": "EXPENSE",
                        "WEIGHT_TICKET_SET": "WEIGHT_TICKET_SET"
                    },
                },
                'openapi_types': {
                    'personally_procured_move_id':
                        (str,),
                    'doc_types':
                        ([str],),
                },
                'attribute_map': {
                    'personally_procured_move_id': 'personallyProcuredMoveId',
                    'doc_types': 'docTypes',
                },
                'location_map': {
                    'personally_procured_move_id': 'path',
                    'doc_types': 'query',
                },
                'collection_format_map': {
                    'doc_types': 'csv',
                }
            },
            headers_map={
                'accept': [
                    'application/json'
                ],
                'content_type': [],
            },
            api_client=api_client
        )
        self.index_personally_procured_moves_endpoint = _Endpoint(
            settings={
                'response_type': (IndexPersonallyProcuredMovePayload,),
                'auth': [],
                'endpoint_path': '/moves/{moveId}/personally_procured_move',
                'operation_id': 'index_personally_procured_moves',
                'http_method': 'GET',
                'servers': None,
            },
            params_map={
                'all': [
                    'move_id',
                ],
                'required': [
                    'move_id',
                ],
                'nullable': [
                ],
                'enum': [
                ],
                'validation': [
                ]
            },
            root_map={
                'validations': {
                },
                'allowed_values': {
                },
                'openapi_types': {
                    'move_id':
                        (str,),
                },
                'attribute_map': {
                    'move_id': 'moveId',
                },
                'location_map': {
                    'move_id': 'path',
                },
                'collection_format_map': {
                }
            },
            headers_map={
                'accept': [
                    'application/json'
                ],
                'content_type': [],
            },
            api_client=api_client
        )
        self.patch_personally_procured_move_endpoint = _Endpoint(
            settings={
                'response_type': (PersonallyProcuredMovePayload,),
                'auth': [],
                'endpoint_path': '/moves/{moveId}/personally_procured_move/{personallyProcuredMoveId}',
                'operation_id': 'patch_personally_procured_move',
                'http_method': 'PATCH',
                'servers': None,
            },
            params_map={
                'all': [
                    'move_id',
                    'personally_procured_move_id',
                    'patch_personally_procured_move_payload',
                ],
                'required': [
                    'move_id',
                    'personally_procured_move_id',
                    'patch_personally_procured_move_payload',
                ],
                'nullable': [
                ],
                'enum': [
                ],
                'validation': [
                ]
            },
            root_map={
                'validations': {
                },
                'allowed_values': {
                },
                'openapi_types': {
                    'move_id':
                        (str,),
                    'personally_procured_move_id':
                        (str,),
                    'patch_personally_procured_move_payload':
                        (PatchPersonallyProcuredMovePayload,),
                },
                'attribute_map': {
                    'move_id': 'moveId',
                    'personally_procured_move_id': 'personallyProcuredMoveId',
                },
                'location_map': {
                    'move_id': 'path',
                    'personally_procured_move_id': 'path',
                    'patch_personally_procured_move_payload': 'body',
                },
                'collection_format_map': {
                }
            },
            headers_map={
                'accept': [
                    'application/json'
                ],
                'content_type': [
                    'application/json'
                ]
            },
            api_client=api_client
        )
        self.request_ppm_expense_summary_endpoint = _Endpoint(
            settings={
                'response_type': (ExpenseSummaryPayload,),
                'auth': [],
                'endpoint_path': '/personally_procured_move/{personallyProcuredMoveId}/expense_summary',
                'operation_id': 'request_ppm_expense_summary',
                'http_method': 'GET',
                'servers': None,
            },
            params_map={
                'all': [
                    'personally_procured_move_id',
                ],
                'required': [
                    'personally_procured_move_id',
                ],
                'nullable': [
                ],
                'enum': [
                ],
                'validation': [
                ]
            },
            root_map={
                'validations': {
                },
                'allowed_values': {
                },
                'openapi_types': {
                    'personally_procured_move_id':
                        (str,),
                },
                'attribute_map': {
                    'personally_procured_move_id': 'personallyProcuredMoveId',
                },
                'location_map': {
                    'personally_procured_move_id': 'path',
                },
                'collection_format_map': {
                }
            },
            headers_map={
                'accept': [
                    'application/json'
                ],
                'content_type': [],
            },
            api_client=api_client
        )
        self.request_ppm_payment_endpoint = _Endpoint(
            settings={
                'response_type': (PersonallyProcuredMovePayload,),
                'auth': [],
                'endpoint_path': '/personally_procured_move/{personallyProcuredMoveId}/request_payment',
                'operation_id': 'request_ppm_payment',
                'http_method': 'POST',
                'servers': None,
            },
            params_map={
                'all': [
                    'personally_procured_move_id',
                ],
                'required': [
                    'personally_procured_move_id',
                ],
                'nullable': [
                ],
                'enum': [
                ],
                'validation': [
                ]
            },
            root_map={
                'validations': {
                },
                'allowed_values': {
                },
                'openapi_types': {
                    'personally_procured_move_id':
                        (str,),
                },
                'attribute_map': {
                    'personally_procured_move_id': 'personallyProcuredMoveId',
                },
                'location_map': {
                    'personally_procured_move_id': 'path',
                },
                'collection_format_map': {
                }
            },
            headers_map={
                'accept': [
                    'application/json'
                ],
                'content_type': [],
            },
            api_client=api_client
        )
        self.show_personally_procured_move_endpoint = _Endpoint(
            settings={
                'response_type': (IndexPersonallyProcuredMovePayload,),
                'auth': [],
                'endpoint_path': '/moves/{moveId}/personally_procured_move/{personallyProcuredMoveId}',
                'operation_id': 'show_personally_procured_move',
                'http_method': 'GET',
                'servers': None,
            },
            params_map={
                'all': [
                    'move_id',
                    'personally_procured_move_id',
                ],
                'required': [
                    'move_id',
                    'personally_procured_move_id',
                ],
                'nullable': [
                ],
                'enum': [
                ],
                'validation': [
                ]
            },
            root_map={
                'validations': {
                },
                'allowed_values': {
                },
                'openapi_types': {
                    'move_id':
                        (str,),
                    'personally_procured_move_id':
                        (str,),
                },
                'attribute_map': {
                    'move_id': 'moveId',
                    'personally_procured_move_id': 'personallyProcuredMoveId',
                },
                'location_map': {
                    'move_id': 'path',
                    'personally_procured_move_id': 'path',
                },
                'collection_format_map': {
                }
            },
            headers_map={
                'accept': [
                    'application/json'
                ],
                'content_type': [],
            },
            api_client=api_client
        )
        self.show_ppm_estimate_endpoint = _Endpoint(
            settings={
                'response_type': (PPMEstimateRange,),
                'auth': [],
                'endpoint_path': '/estimates/ppm',
                'operation_id': 'show_ppm_estimate',
                'http_method': 'GET',
                'servers': None,
            },
            params_map={
                'all': [
                    'original_move_date',
                    'origin_zip',
                    'origin_duty_location_zip',
                    'orders_id',
                    'weight_estimate',
                ],
                'required': [
                    'original_move_date',
                    'origin_zip',
                    'origin_duty_location_zip',
                    'orders_id',
                    'weight_estimate',
                ],
                'nullable': [
                ],
                'enum': [
                ],
                'validation': [
                    'origin_zip',
                    'origin_duty_location_zip',
                ]
            },
            root_map={
                'validations': {
                    ('origin_zip',): {

                        'regex': {
                            'pattern': r'^(\d{5}([\-]\d{4})?)$',  # noqa: E501
                        },
                    },
                    ('origin_duty_location_zip',): {

                        'regex': {
                            'pattern': r'^(\d{5}([\-]\d{4})?)$',  # noqa: E501
                        },
                    },
                },
                'allowed_values': {
                },
                'openapi_types': {
                    'original_move_date':
                        (date,),
                    'origin_zip':
                        (str,),
                    'origin_duty_location_zip':
                        (str,),
                    'orders_id':
                        (str,),
                    'weight_estimate':
                        (int,),
                },
                'attribute_map': {
                    'original_move_date': 'original_move_date',
                    'origin_zip': 'origin_zip',
                    'origin_duty_location_zip': 'origin_duty_location_zip',
                    'orders_id': 'orders_id',
                    'weight_estimate': 'weight_estimate',
                },
                'location_map': {
                    'original_move_date': 'query',
                    'origin_zip': 'query',
                    'origin_duty_location_zip': 'query',
                    'orders_id': 'query',
                    'weight_estimate': 'query',
                },
                'collection_format_map': {
                }
            },
            headers_map={
                'accept': [
                    'application/json'
                ],
                'content_type': [],
            },
            api_client=api_client
        )
        self.show_ppm_incentive_endpoint = _Endpoint(
            settings={
                'response_type': (PPMIncentive,),
                'auth': [],
                'endpoint_path': '/personally_procured_moves/incentive',
                'operation_id': 'show_ppm_incentive',
                'http_method': 'GET',
                'servers': None,
            },
            params_map={
                'all': [
                    'original_move_date',
                    'origin_zip',
                    'origin_duty_location_zip',
                    'orders_id',
                    'weight',
                ],
                'required': [
                    'original_move_date',
                    'origin_zip',
                    'origin_duty_location_zip',
                    'orders_id',
                    'weight',
                ],
                'nullable': [
                ],
                'enum': [
                ],
                'validation': [
                    'origin_zip',
                    'origin_duty_location_zip',
                ]
            },
            root_map={
                'validations': {
                    ('origin_zip',): {

                        'regex': {
                            'pattern': r'^(\d{5}([\-]\d{4})?)$',  # noqa: E501
                        },
                    },
                    ('origin_duty_location_zip',): {

                        'regex': {
                            'pattern': r'^(\d{5}([\-]\d{4})?)$',  # noqa: E501
                        },
                    },
                },
                'allowed_values': {
                },
                'openapi_types': {
                    'original_move_date':
                        (date,),
                    'origin_zip':
                        (str,),
                    'origin_duty_location_zip':
                        (str,),
                    'orders_id':
                        (str,),
                    'weight':
                        (int,),
                },
                'attribute_map': {
                    'original_move_date': 'original_move_date',
                    'origin_zip': 'origin_zip',
                    'origin_duty_location_zip': 'origin_duty_location_zip',
                    'orders_id': 'orders_id',
                    'weight': 'weight',
                },
                'location_map': {
                    'original_move_date': 'query',
                    'origin_zip': 'query',
                    'origin_duty_location_zip': 'query',
                    'orders_id': 'query',
                    'weight': 'query',
                },
                'collection_format_map': {
                }
            },
            headers_map={
                'accept': [
                    'application/json'
                ],
                'content_type': [],
            },
            api_client=api_client
        )
        self.show_ppm_sit_estimate_endpoint = _Endpoint(
            settings={
                'response_type': (PPMSitEstimate,),
                'auth': [],
                'endpoint_path': '/estimates/ppm_sit',
                'operation_id': 'show_ppm_sit_estimate',
                'http_method': 'GET',
                'servers': None,
            },
            params_map={
                'all': [
                    'personally_procured_move_id',
                    'original_move_date',
                    'days_in_storage',
                    'origin_zip',
                    'orders_id',
                    'weight_estimate',
                ],
                'required': [
                    'personally_procured_move_id',
                    'original_move_date',
                    'days_in_storage',
                    'origin_zip',
                    'orders_id',
                    'weight_estimate',
                ],
                'nullable': [
                ],
                'enum': [
                ],
                'validation': [
                    'origin_zip',
                ]
            },
            root_map={
                'validations': {
                    ('origin_zip',): {

                        'regex': {
                            'pattern': r'^(\d{5}([\-]\d{4})?)$',  # noqa: E501
                        },
                    },
                },
                'allowed_values': {
                },
                'openapi_types': {
                    'personally_procured_move_id':
                        (str,),
                    'original_move_date':
                        (date,),
                    'days_in_storage':
                        (int,),
                    'origin_zip':
                        (str,),
                    'orders_id':
                        (str,),
                    'weight_estimate':
                        (int,),
                },
                'attribute_map': {
                    'personally_procured_move_id': 'personally_procured_move_id',
                    'original_move_date': 'original_move_date',
                    'days_in_storage': 'days_in_storage',
                    'origin_zip': 'origin_zip',
                    'orders_id': 'orders_id',
                    'weight_estimate': 'weight_estimate',
                },
                'location_map': {
                    'personally_procured_move_id': 'query',
                    'original_move_date': 'query',
                    'days_in_storage': 'query',
                    'origin_zip': 'query',
                    'orders_id': 'query',
                    'weight_estimate': 'query',
                },
                'collection_format_map': {
                }
            },
            headers_map={
                'accept': [
                    'application/json'
                ],
                'content_type': [],
            },
            api_client=api_client
        )
        self.submit_personally_procured_move_endpoint = _Endpoint(
            settings={
                'response_type': (PersonallyProcuredMovePayload,),
                'auth': [],
                'endpoint_path': '/personally_procured_move/{personallyProcuredMoveId}/submit',
                'operation_id': 'submit_personally_procured_move',
                'http_method': 'POST',
                'servers': None,
            },
            params_map={
                'all': [
                    'personally_procured_move_id',
                    'submit_personally_procured_move_payload',
                ],
                'required': [
                    'personally_procured_move_id',
                    'submit_personally_procured_move_payload',
                ],
                'nullable': [
                ],
                'enum': [
                ],
                'validation': [
                ]
            },
            root_map={
                'validations': {
                },
                'allowed_values': {
                },
                'openapi_types': {
                    'personally_procured_move_id':
                        (str,),
                    'submit_personally_procured_move_payload':
                        (SubmitPersonallyProcuredMovePayload,),
                },
                'attribute_map': {
                    'personally_procured_move_id': 'personallyProcuredMoveId',
                },
                'location_map': {
                    'personally_procured_move_id': 'path',
                    'submit_personally_procured_move_payload': 'body',
                },
                'collection_format_map': {
                }
            },
            headers_map={
                'accept': [
                    'application/json'
                ],
                'content_type': [
                    'application/json'
                ]
            },
            api_client=api_client
        )
        self.update_personally_procured_move_endpoint = _Endpoint(
            settings={
                'response_type': (PersonallyProcuredMovePayload,),
                'auth': [],
                'endpoint_path': '/moves/{moveId}/personally_procured_move/{personallyProcuredMoveId}',
                'operation_id': 'update_personally_procured_move',
                'http_method': 'PUT',
                'servers': None,
            },
            params_map={
                'all': [
                    'move_id',
                    'personally_procured_move_id',
                    'update_personally_procured_move_payload',
                ],
                'required': [
                    'move_id',
                    'personally_procured_move_id',
                    'update_personally_procured_move_payload',
                ],
                'nullable': [
                ],
                'enum': [
                ],
                'validation': [
                ]
            },
            root_map={
                'validations': {
                },
                'allowed_values': {
                },
                'openapi_types': {
                    'move_id':
                        (str,),
                    'personally_procured_move_id':
                        (str,),
                    'update_personally_procured_move_payload':
                        (UpdatePersonallyProcuredMovePayload,),
                },
                'attribute_map': {
                    'move_id': 'moveId',
                    'personally_procured_move_id': 'personallyProcuredMoveId',
                },
                'location_map': {
                    'move_id': 'path',
                    'personally_procured_move_id': 'path',
                    'update_personally_procured_move_payload': 'body',
                },
                'collection_format_map': {
                }
            },
            headers_map={
                'accept': [
                    'application/json'
                ],
                'content_type': [
                    'application/json'
                ]
            },
            api_client=api_client
        )
        self.update_personally_procured_move_estimate_endpoint = _Endpoint(
            settings={
                'response_type': (PersonallyProcuredMovePayload,),
                'auth': [],
                'endpoint_path': '/moves/{moveId}/personally_procured_move/{personallyProcuredMoveId}/estimate',
                'operation_id': 'update_personally_procured_move_estimate',
                'http_method': 'PATCH',
                'servers': None,
            },
            params_map={
                'all': [
                    'move_id',
                    'personally_procured_move_id',
                ],
                'required': [
                    'move_id',
                    'personally_procured_move_id',
                ],
                'nullable': [
                ],
                'enum': [
                ],
                'validation': [
                ]
            },
            root_map={
                'validations': {
                },
                'allowed_values': {
                },
                'openapi_types': {
                    'move_id':
                        (str,),
                    'personally_procured_move_id':
                        (str,),
                },
                'attribute_map': {
                    'move_id': 'moveId',
                    'personally_procured_move_id': 'personallyProcuredMoveId',
                },
                'location_map': {
                    'move_id': 'path',
                    'personally_procured_move_id': 'path',
                },
                'collection_format_map': {
                }
            },
            headers_map={
                'accept': [
                    'application/json'
                ],
                'content_type': [],
            },
            api_client=api_client
        )

    def create_personally_procured_move(
        self,
        move_id,
        create_personally_procured_move_payload,
        **kwargs
    ):
        """Creates a new PPM for the given move  # noqa: E501

        Create an instance of personally_procured_move tied to the move ID  # noqa: E501
        This method makes a synchronous HTTP request by default. To make an
        asynchronous HTTP request, please pass async_req=True

        >>> thread = api.create_personally_procured_move(move_id, create_personally_procured_move_payload, async_req=True)
        >>> result = thread.get()

        Args:
            move_id (str): UUID of the move this PPM is associated with
            create_personally_procured_move_payload (CreatePersonallyProcuredMovePayload):

        Keyword Args:
            _return_http_data_only (bool): response data without head status
                code and headers. Default is True.
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _spec_property_naming (bool): True if the variable names in the input data
                are serialized names, as specified in the OpenAPI document.
                False if the variable names in the input data
                are pythonic names, e.g. snake case (default)
            _content_type (str/None): force body content-type.
                Default is None and content-type will be predicted by allowed
                content-types and body.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
            async_req (bool): execute request asynchronously

        Returns:
            PersonallyProcuredMovePayload
                If the method is called asynchronously, returns the request
                thread.
        """
        kwargs['async_req'] = kwargs.get(
            'async_req', False
        )
        kwargs['_return_http_data_only'] = kwargs.get(
            '_return_http_data_only', True
        )
        kwargs['_preload_content'] = kwargs.get(
            '_preload_content', True
        )
        kwargs['_request_timeout'] = kwargs.get(
            '_request_timeout', None
        )
        kwargs['_check_input_type'] = kwargs.get(
            '_check_input_type', True
        )
        kwargs['_check_return_type'] = kwargs.get(
            '_check_return_type', True
        )
        kwargs['_spec_property_naming'] = kwargs.get(
            '_spec_property_naming', False
        )
        kwargs['_content_type'] = kwargs.get(
            '_content_type')
        kwargs['_host_index'] = kwargs.get('_host_index')
        kwargs['move_id'] = \
            move_id
        kwargs['create_personally_procured_move_payload'] = \
            create_personally_procured_move_payload
        return self.create_personally_procured_move_endpoint.call_with_http_info(**kwargs)

    def create_ppm_attachments(
        self,
        personally_procured_move_id,
        doc_types,
        **kwargs
    ):
        """Creates PPM attachments PDF  # noqa: E501

        Creates a PPM attachments PDF  # noqa: E501
        This method makes a synchronous HTTP request by default. To make an
        asynchronous HTTP request, please pass async_req=True

        >>> thread = api.create_ppm_attachments(personally_procured_move_id, doc_types, async_req=True)
        >>> result = thread.get()

        Args:
            personally_procured_move_id (str): UUID of the PPM to create an attachments PDF for
            doc_types ([str]): Restrict the list to documents with matching docType.

        Keyword Args:
            _return_http_data_only (bool): response data without head status
                code and headers. Default is True.
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _spec_property_naming (bool): True if the variable names in the input data
                are serialized names, as specified in the OpenAPI document.
                False if the variable names in the input data
                are pythonic names, e.g. snake case (default)
            _content_type (str/None): force body content-type.
                Default is None and content-type will be predicted by allowed
                content-types and body.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
            async_req (bool): execute request asynchronously

        Returns:
            UploadPayload
                If the method is called asynchronously, returns the request
                thread.
        """
        kwargs['async_req'] = kwargs.get(
            'async_req', False
        )
        kwargs['_return_http_data_only'] = kwargs.get(
            '_return_http_data_only', True
        )
        kwargs['_preload_content'] = kwargs.get(
            '_preload_content', True
        )
        kwargs['_request_timeout'] = kwargs.get(
            '_request_timeout', None
        )
        kwargs['_check_input_type'] = kwargs.get(
            '_check_input_type', True
        )
        kwargs['_check_return_type'] = kwargs.get(
            '_check_return_type', True
        )
        kwargs['_spec_property_naming'] = kwargs.get(
            '_spec_property_naming', False
        )
        kwargs['_content_type'] = kwargs.get(
            '_content_type')
        kwargs['_host_index'] = kwargs.get('_host_index')
        kwargs['personally_procured_move_id'] = \
            personally_procured_move_id
        kwargs['doc_types'] = \
            doc_types
        return self.create_ppm_attachments_endpoint.call_with_http_info(**kwargs)

    def index_personally_procured_moves(
        self,
        move_id,
        **kwargs
    ):
        """Returns a list of all PPMs associated with this move  # noqa: E501

        Returns a list of all PPMs associated with this move  # noqa: E501
        This method makes a synchronous HTTP request by default. To make an
        asynchronous HTTP request, please pass async_req=True

        >>> thread = api.index_personally_procured_moves(move_id, async_req=True)
        >>> result = thread.get()

        Args:
            move_id (str): UUID of the move these PPMs are associated with

        Keyword Args:
            _return_http_data_only (bool): response data without head status
                code and headers. Default is True.
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _spec_property_naming (bool): True if the variable names in the input data
                are serialized names, as specified in the OpenAPI document.
                False if the variable names in the input data
                are pythonic names, e.g. snake case (default)
            _content_type (str/None): force body content-type.
                Default is None and content-type will be predicted by allowed
                content-types and body.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
            async_req (bool): execute request asynchronously

        Returns:
            IndexPersonallyProcuredMovePayload
                If the method is called asynchronously, returns the request
                thread.
        """
        kwargs['async_req'] = kwargs.get(
            'async_req', False
        )
        kwargs['_return_http_data_only'] = kwargs.get(
            '_return_http_data_only', True
        )
        kwargs['_preload_content'] = kwargs.get(
            '_preload_content', True
        )
        kwargs['_request_timeout'] = kwargs.get(
            '_request_timeout', None
        )
        kwargs['_check_input_type'] = kwargs.get(
            '_check_input_type', True
        )
        kwargs['_check_return_type'] = kwargs.get(
            '_check_return_type', True
        )
        kwargs['_spec_property_naming'] = kwargs.get(
            '_spec_property_naming', False
        )
        kwargs['_content_type'] = kwargs.get(
            '_content_type')
        kwargs['_host_index'] = kwargs.get('_host_index')
        kwargs['move_id'] = \
            move_id
        return self.index_personally_procured_moves_endpoint.call_with_http_info(**kwargs)

    def patch_personally_procured_move(
        self,
        move_id,
        personally_procured_move_id,
        patch_personally_procured_move_payload,
        **kwargs
    ):
        """Patches the PPM  # noqa: E501

        Any fields sent in this request will be set on the PPM referenced  # noqa: E501
        This method makes a synchronous HTTP request by default. To make an
        asynchronous HTTP request, please pass async_req=True

        >>> thread = api.patch_personally_procured_move(move_id, personally_procured_move_id, patch_personally_procured_move_payload, async_req=True)
        >>> result = thread.get()

        Args:
            move_id (str): UUID of the move
            personally_procured_move_id (str): UUID of the PPM being patched
            patch_personally_procured_move_payload (PatchPersonallyProcuredMovePayload):

        Keyword Args:
            _return_http_data_only (bool): response data without head status
                code and headers. Default is True.
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _spec_property_naming (bool): True if the variable names in the input data
                are serialized names, as specified in the OpenAPI document.
                False if the variable names in the input data
                are pythonic names, e.g. snake case (default)
            _content_type (str/None): force body content-type.
                Default is None and content-type will be predicted by allowed
                content-types and body.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
            async_req (bool): execute request asynchronously

        Returns:
            PersonallyProcuredMovePayload
                If the method is called asynchronously, returns the request
                thread.
        """
        kwargs['async_req'] = kwargs.get(
            'async_req', False
        )
        kwargs['_return_http_data_only'] = kwargs.get(
            '_return_http_data_only', True
        )
        kwargs['_preload_content'] = kwargs.get(
            '_preload_content', True
        )
        kwargs['_request_timeout'] = kwargs.get(
            '_request_timeout', None
        )
        kwargs['_check_input_type'] = kwargs.get(
            '_check_input_type', True
        )
        kwargs['_check_return_type'] = kwargs.get(
            '_check_return_type', True
        )
        kwargs['_spec_property_naming'] = kwargs.get(
            '_spec_property_naming', False
        )
        kwargs['_content_type'] = kwargs.get(
            '_content_type')
        kwargs['_host_index'] = kwargs.get('_host_index')
        kwargs['move_id'] = \
            move_id
        kwargs['personally_procured_move_id'] = \
            personally_procured_move_id
        kwargs['patch_personally_procured_move_payload'] = \
            patch_personally_procured_move_payload
        return self.patch_personally_procured_move_endpoint.call_with_http_info(**kwargs)

    def request_ppm_expense_summary(
        self,
        personally_procured_move_id,
        **kwargs
    ):
        """Returns an expense summary organized by expense type  # noqa: E501

        Calculates and returns an expense summary organized by expense type  # noqa: E501
        This method makes a synchronous HTTP request by default. To make an
        asynchronous HTTP request, please pass async_req=True

        >>> thread = api.request_ppm_expense_summary(personally_procured_move_id, async_req=True)
        >>> result = thread.get()

        Args:
            personally_procured_move_id (str): UUID of the PPM

        Keyword Args:
            _return_http_data_only (bool): response data without head status
                code and headers. Default is True.
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _spec_property_naming (bool): True if the variable names in the input data
                are serialized names, as specified in the OpenAPI document.
                False if the variable names in the input data
                are pythonic names, e.g. snake case (default)
            _content_type (str/None): force body content-type.
                Default is None and content-type will be predicted by allowed
                content-types and body.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
            async_req (bool): execute request asynchronously

        Returns:
            ExpenseSummaryPayload
                If the method is called asynchronously, returns the request
                thread.
        """
        kwargs['async_req'] = kwargs.get(
            'async_req', False
        )
        kwargs['_return_http_data_only'] = kwargs.get(
            '_return_http_data_only', True
        )
        kwargs['_preload_content'] = kwargs.get(
            '_preload_content', True
        )
        kwargs['_request_timeout'] = kwargs.get(
            '_request_timeout', None
        )
        kwargs['_check_input_type'] = kwargs.get(
            '_check_input_type', True
        )
        kwargs['_check_return_type'] = kwargs.get(
            '_check_return_type', True
        )
        kwargs['_spec_property_naming'] = kwargs.get(
            '_spec_property_naming', False
        )
        kwargs['_content_type'] = kwargs.get(
            '_content_type')
        kwargs['_host_index'] = kwargs.get('_host_index')
        kwargs['personally_procured_move_id'] = \
            personally_procured_move_id
        return self.request_ppm_expense_summary_endpoint.call_with_http_info(**kwargs)

    def request_ppm_payment(
        self,
        personally_procured_move_id,
        **kwargs
    ):
        """Moves the PPM and the move into the PAYMENT_REQUESTED state  # noqa: E501

        Moves the PPM and the move into the PAYMENT_REQUESTED state  # noqa: E501
        This method makes a synchronous HTTP request by default. To make an
        asynchronous HTTP request, please pass async_req=True

        >>> thread = api.request_ppm_payment(personally_procured_move_id, async_req=True)
        >>> result = thread.get()

        Args:
            personally_procured_move_id (str): UUID of the PPM

        Keyword Args:
            _return_http_data_only (bool): response data without head status
                code and headers. Default is True.
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _spec_property_naming (bool): True if the variable names in the input data
                are serialized names, as specified in the OpenAPI document.
                False if the variable names in the input data
                are pythonic names, e.g. snake case (default)
            _content_type (str/None): force body content-type.
                Default is None and content-type will be predicted by allowed
                content-types and body.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
            async_req (bool): execute request asynchronously

        Returns:
            PersonallyProcuredMovePayload
                If the method is called asynchronously, returns the request
                thread.
        """
        kwargs['async_req'] = kwargs.get(
            'async_req', False
        )
        kwargs['_return_http_data_only'] = kwargs.get(
            '_return_http_data_only', True
        )
        kwargs['_preload_content'] = kwargs.get(
            '_preload_content', True
        )
        kwargs['_request_timeout'] = kwargs.get(
            '_request_timeout', None
        )
        kwargs['_check_input_type'] = kwargs.get(
            '_check_input_type', True
        )
        kwargs['_check_return_type'] = kwargs.get(
            '_check_return_type', True
        )
        kwargs['_spec_property_naming'] = kwargs.get(
            '_spec_property_naming', False
        )
        kwargs['_content_type'] = kwargs.get(
            '_content_type')
        kwargs['_host_index'] = kwargs.get('_host_index')
        kwargs['personally_procured_move_id'] = \
            personally_procured_move_id
        return self.request_ppm_payment_endpoint.call_with_http_info(**kwargs)

    def show_personally_procured_move(
        self,
        move_id,
        personally_procured_move_id,
        **kwargs
    ):
        """Returns the given PPM  # noqa: E501

        Returns the given PPM  # noqa: E501
        This method makes a synchronous HTTP request by default. To make an
        asynchronous HTTP request, please pass async_req=True

        >>> thread = api.show_personally_procured_move(move_id, personally_procured_move_id, async_req=True)
        >>> result = thread.get()

        Args:
            move_id (str): UUID of the move being signed for
            personally_procured_move_id (str): UUID of the PPM

        Keyword Args:
            _return_http_data_only (bool): response data without head status
                code and headers. Default is True.
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _spec_property_naming (bool): True if the variable names in the input data
                are serialized names, as specified in the OpenAPI document.
                False if the variable names in the input data
                are pythonic names, e.g. snake case (default)
            _content_type (str/None): force body content-type.
                Default is None and content-type will be predicted by allowed
                content-types and body.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
            async_req (bool): execute request asynchronously

        Returns:
            IndexPersonallyProcuredMovePayload
                If the method is called asynchronously, returns the request
                thread.
        """
        kwargs['async_req'] = kwargs.get(
            'async_req', False
        )
        kwargs['_return_http_data_only'] = kwargs.get(
            '_return_http_data_only', True
        )
        kwargs['_preload_content'] = kwargs.get(
            '_preload_content', True
        )
        kwargs['_request_timeout'] = kwargs.get(
            '_request_timeout', None
        )
        kwargs['_check_input_type'] = kwargs.get(
            '_check_input_type', True
        )
        kwargs['_check_return_type'] = kwargs.get(
            '_check_return_type', True
        )
        kwargs['_spec_property_naming'] = kwargs.get(
            '_spec_property_naming', False
        )
        kwargs['_content_type'] = kwargs.get(
            '_content_type')
        kwargs['_host_index'] = kwargs.get('_host_index')
        kwargs['move_id'] = \
            move_id
        kwargs['personally_procured_move_id'] = \
            personally_procured_move_id
        return self.show_personally_procured_move_endpoint.call_with_http_info(**kwargs)

    def show_ppm_estimate(
        self,
        original_move_date,
        origin_zip,
        origin_duty_location_zip,
        orders_id,
        weight_estimate,
        **kwargs
    ):
        """Return a PPM cost estimate  # noqa: E501

        Calculates a reimbursement range for a PPM move (excluding SIT)  # noqa: E501
        This method makes a synchronous HTTP request by default. To make an
        asynchronous HTTP request, please pass async_req=True

        >>> thread = api.show_ppm_estimate(original_move_date, origin_zip, origin_duty_location_zip, orders_id, weight_estimate, async_req=True)
        >>> result = thread.get()

        Args:
            original_move_date (date):
            origin_zip (str):
            origin_duty_location_zip (str):
            orders_id (str):
            weight_estimate (int):

        Keyword Args:
            _return_http_data_only (bool): response data without head status
                code and headers. Default is True.
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _spec_property_naming (bool): True if the variable names in the input data
                are serialized names, as specified in the OpenAPI document.
                False if the variable names in the input data
                are pythonic names, e.g. snake case (default)
            _content_type (str/None): force body content-type.
                Default is None and content-type will be predicted by allowed
                content-types and body.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
            async_req (bool): execute request asynchronously

        Returns:
            PPMEstimateRange
                If the method is called asynchronously, returns the request
                thread.
        """
        kwargs['async_req'] = kwargs.get(
            'async_req', False
        )
        kwargs['_return_http_data_only'] = kwargs.get(
            '_return_http_data_only', True
        )
        kwargs['_preload_content'] = kwargs.get(
            '_preload_content', True
        )
        kwargs['_request_timeout'] = kwargs.get(
            '_request_timeout', None
        )
        kwargs['_check_input_type'] = kwargs.get(
            '_check_input_type', True
        )
        kwargs['_check_return_type'] = kwargs.get(
            '_check_return_type', True
        )
        kwargs['_spec_property_naming'] = kwargs.get(
            '_spec_property_naming', False
        )
        kwargs['_content_type'] = kwargs.get(
            '_content_type')
        kwargs['_host_index'] = kwargs.get('_host_index')
        kwargs['original_move_date'] = \
            original_move_date
        kwargs['origin_zip'] = \
            origin_zip
        kwargs['origin_duty_location_zip'] = \
            origin_duty_location_zip
        kwargs['orders_id'] = \
            orders_id
        kwargs['weight_estimate'] = \
            weight_estimate
        return self.show_ppm_estimate_endpoint.call_with_http_info(**kwargs)

    def show_ppm_incentive(
        self,
        original_move_date,
        origin_zip,
        origin_duty_location_zip,
        orders_id,
        weight,
        **kwargs
    ):
        """Return a PPM incentive value  # noqa: E501

        Calculates incentive for a PPM move (excluding SIT)  # noqa: E501
        This method makes a synchronous HTTP request by default. To make an
        asynchronous HTTP request, please pass async_req=True

        >>> thread = api.show_ppm_incentive(original_move_date, origin_zip, origin_duty_location_zip, orders_id, weight, async_req=True)
        >>> result = thread.get()

        Args:
            original_move_date (date):
            origin_zip (str):
            origin_duty_location_zip (str):
            orders_id (str):
            weight (int):

        Keyword Args:
            _return_http_data_only (bool): response data without head status
                code and headers. Default is True.
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _spec_property_naming (bool): True if the variable names in the input data
                are serialized names, as specified in the OpenAPI document.
                False if the variable names in the input data
                are pythonic names, e.g. snake case (default)
            _content_type (str/None): force body content-type.
                Default is None and content-type will be predicted by allowed
                content-types and body.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
            async_req (bool): execute request asynchronously

        Returns:
            PPMIncentive
                If the method is called asynchronously, returns the request
                thread.
        """
        kwargs['async_req'] = kwargs.get(
            'async_req', False
        )
        kwargs['_return_http_data_only'] = kwargs.get(
            '_return_http_data_only', True
        )
        kwargs['_preload_content'] = kwargs.get(
            '_preload_content', True
        )
        kwargs['_request_timeout'] = kwargs.get(
            '_request_timeout', None
        )
        kwargs['_check_input_type'] = kwargs.get(
            '_check_input_type', True
        )
        kwargs['_check_return_type'] = kwargs.get(
            '_check_return_type', True
        )
        kwargs['_spec_property_naming'] = kwargs.get(
            '_spec_property_naming', False
        )
        kwargs['_content_type'] = kwargs.get(
            '_content_type')
        kwargs['_host_index'] = kwargs.get('_host_index')
        kwargs['original_move_date'] = \
            original_move_date
        kwargs['origin_zip'] = \
            origin_zip
        kwargs['origin_duty_location_zip'] = \
            origin_duty_location_zip
        kwargs['orders_id'] = \
            orders_id
        kwargs['weight'] = \
            weight
        return self.show_ppm_incentive_endpoint.call_with_http_info(**kwargs)

    def show_ppm_sit_estimate(
        self,
        personally_procured_move_id,
        original_move_date,
        days_in_storage,
        origin_zip,
        orders_id,
        weight_estimate,
        **kwargs
    ):
        """Return a PPM move's SIT cost estimate  # noqa: E501

        Calculates a reimbursment for a PPM move's SIT  # noqa: E501
        This method makes a synchronous HTTP request by default. To make an
        asynchronous HTTP request, please pass async_req=True

        >>> thread = api.show_ppm_sit_estimate(personally_procured_move_id, original_move_date, days_in_storage, origin_zip, orders_id, weight_estimate, async_req=True)
        >>> result = thread.get()

        Args:
            personally_procured_move_id (str):
            original_move_date (date):
            days_in_storage (int):
            origin_zip (str):
            orders_id (str):
            weight_estimate (int):

        Keyword Args:
            _return_http_data_only (bool): response data without head status
                code and headers. Default is True.
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _spec_property_naming (bool): True if the variable names in the input data
                are serialized names, as specified in the OpenAPI document.
                False if the variable names in the input data
                are pythonic names, e.g. snake case (default)
            _content_type (str/None): force body content-type.
                Default is None and content-type will be predicted by allowed
                content-types and body.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
            async_req (bool): execute request asynchronously

        Returns:
            PPMSitEstimate
                If the method is called asynchronously, returns the request
                thread.
        """
        kwargs['async_req'] = kwargs.get(
            'async_req', False
        )
        kwargs['_return_http_data_only'] = kwargs.get(
            '_return_http_data_only', True
        )
        kwargs['_preload_content'] = kwargs.get(
            '_preload_content', True
        )
        kwargs['_request_timeout'] = kwargs.get(
            '_request_timeout', None
        )
        kwargs['_check_input_type'] = kwargs.get(
            '_check_input_type', True
        )
        kwargs['_check_return_type'] = kwargs.get(
            '_check_return_type', True
        )
        kwargs['_spec_property_naming'] = kwargs.get(
            '_spec_property_naming', False
        )
        kwargs['_content_type'] = kwargs.get(
            '_content_type')
        kwargs['_host_index'] = kwargs.get('_host_index')
        kwargs['personally_procured_move_id'] = \
            personally_procured_move_id
        kwargs['original_move_date'] = \
            original_move_date
        kwargs['days_in_storage'] = \
            days_in_storage
        kwargs['origin_zip'] = \
            origin_zip
        kwargs['orders_id'] = \
            orders_id
        kwargs['weight_estimate'] = \
            weight_estimate
        return self.show_ppm_sit_estimate_endpoint.call_with_http_info(**kwargs)

    def submit_personally_procured_move(
        self,
        personally_procured_move_id,
        submit_personally_procured_move_payload,
        **kwargs
    ):
        """Submits a PPM for approval  # noqa: E501

        Submits a PPM for approval by the office. The status of the PPM will be updated to SUBMITTED  # noqa: E501
        This method makes a synchronous HTTP request by default. To make an
        asynchronous HTTP request, please pass async_req=True

        >>> thread = api.submit_personally_procured_move(personally_procured_move_id, submit_personally_procured_move_payload, async_req=True)
        >>> result = thread.get()

        Args:
            personally_procured_move_id (str): UUID of the PPM being submitted
            submit_personally_procured_move_payload (SubmitPersonallyProcuredMovePayload):

        Keyword Args:
            _return_http_data_only (bool): response data without head status
                code and headers. Default is True.
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _spec_property_naming (bool): True if the variable names in the input data
                are serialized names, as specified in the OpenAPI document.
                False if the variable names in the input data
                are pythonic names, e.g. snake case (default)
            _content_type (str/None): force body content-type.
                Default is None and content-type will be predicted by allowed
                content-types and body.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
            async_req (bool): execute request asynchronously

        Returns:
            PersonallyProcuredMovePayload
                If the method is called asynchronously, returns the request
                thread.
        """
        kwargs['async_req'] = kwargs.get(
            'async_req', False
        )
        kwargs['_return_http_data_only'] = kwargs.get(
            '_return_http_data_only', True
        )
        kwargs['_preload_content'] = kwargs.get(
            '_preload_content', True
        )
        kwargs['_request_timeout'] = kwargs.get(
            '_request_timeout', None
        )
        kwargs['_check_input_type'] = kwargs.get(
            '_check_input_type', True
        )
        kwargs['_check_return_type'] = kwargs.get(
            '_check_return_type', True
        )
        kwargs['_spec_property_naming'] = kwargs.get(
            '_spec_property_naming', False
        )
        kwargs['_content_type'] = kwargs.get(
            '_content_type')
        kwargs['_host_index'] = kwargs.get('_host_index')
        kwargs['personally_procured_move_id'] = \
            personally_procured_move_id
        kwargs['submit_personally_procured_move_payload'] = \
            submit_personally_procured_move_payload
        return self.submit_personally_procured_move_endpoint.call_with_http_info(**kwargs)

    def update_personally_procured_move(
        self,
        move_id,
        personally_procured_move_id,
        update_personally_procured_move_payload,
        **kwargs
    ):
        """Updates the PPM  # noqa: E501

        This replaces the current version of the PPM with the version sent.  # noqa: E501
        This method makes a synchronous HTTP request by default. To make an
        asynchronous HTTP request, please pass async_req=True

        >>> thread = api.update_personally_procured_move(move_id, personally_procured_move_id, update_personally_procured_move_payload, async_req=True)
        >>> result = thread.get()

        Args:
            move_id (str): UUID of the move
            personally_procured_move_id (str): UUID of the PPM being updated
            update_personally_procured_move_payload (UpdatePersonallyProcuredMovePayload):

        Keyword Args:
            _return_http_data_only (bool): response data without head status
                code and headers. Default is True.
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _spec_property_naming (bool): True if the variable names in the input data
                are serialized names, as specified in the OpenAPI document.
                False if the variable names in the input data
                are pythonic names, e.g. snake case (default)
            _content_type (str/None): force body content-type.
                Default is None and content-type will be predicted by allowed
                content-types and body.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
            async_req (bool): execute request asynchronously

        Returns:
            PersonallyProcuredMovePayload
                If the method is called asynchronously, returns the request
                thread.
        """
        kwargs['async_req'] = kwargs.get(
            'async_req', False
        )
        kwargs['_return_http_data_only'] = kwargs.get(
            '_return_http_data_only', True
        )
        kwargs['_preload_content'] = kwargs.get(
            '_preload_content', True
        )
        kwargs['_request_timeout'] = kwargs.get(
            '_request_timeout', None
        )
        kwargs['_check_input_type'] = kwargs.get(
            '_check_input_type', True
        )
        kwargs['_check_return_type'] = kwargs.get(
            '_check_return_type', True
        )
        kwargs['_spec_property_naming'] = kwargs.get(
            '_spec_property_naming', False
        )
        kwargs['_content_type'] = kwargs.get(
            '_content_type')
        kwargs['_host_index'] = kwargs.get('_host_index')
        kwargs['move_id'] = \
            move_id
        kwargs['personally_procured_move_id'] = \
            personally_procured_move_id
        kwargs['update_personally_procured_move_payload'] = \
            update_personally_procured_move_payload
        return self.update_personally_procured_move_endpoint.call_with_http_info(**kwargs)

    def update_personally_procured_move_estimate(
        self,
        move_id,
        personally_procured_move_id,
        **kwargs
    ):
        """Calculates the estimated incentive of a PPM  # noqa: E501

        This request calculates the estimated incentive of a PPM and attaches this range to the PPM  # noqa: E501
        This method makes a synchronous HTTP request by default. To make an
        asynchronous HTTP request, please pass async_req=True

        >>> thread = api.update_personally_procured_move_estimate(move_id, personally_procured_move_id, async_req=True)
        >>> result = thread.get()

        Args:
            move_id (str): UUID of the move
            personally_procured_move_id (str): UUID of the PPM being patched

        Keyword Args:
            _return_http_data_only (bool): response data without head status
                code and headers. Default is True.
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _spec_property_naming (bool): True if the variable names in the input data
                are serialized names, as specified in the OpenAPI document.
                False if the variable names in the input data
                are pythonic names, e.g. snake case (default)
            _content_type (str/None): force body content-type.
                Default is None and content-type will be predicted by allowed
                content-types and body.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
            async_req (bool): execute request asynchronously

        Returns:
            PersonallyProcuredMovePayload
                If the method is called asynchronously, returns the request
                thread.
        """
        kwargs['async_req'] = kwargs.get(
            'async_req', False
        )
        kwargs['_return_http_data_only'] = kwargs.get(
            '_return_http_data_only', True
        )
        kwargs['_preload_content'] = kwargs.get(
            '_preload_content', True
        )
        kwargs['_request_timeout'] = kwargs.get(
            '_request_timeout', None
        )
        kwargs['_check_input_type'] = kwargs.get(
            '_check_input_type', True
        )
        kwargs['_check_return_type'] = kwargs.get(
            '_check_return_type', True
        )
        kwargs['_spec_property_naming'] = kwargs.get(
            '_spec_property_naming', False
        )
        kwargs['_content_type'] = kwargs.get(
            '_content_type')
        kwargs['_host_index'] = kwargs.get('_host_index')
        kwargs['move_id'] = \
            move_id
        kwargs['personally_procured_move_id'] = \
            personally_procured_move_id
        return self.update_personally_procured_move_estimate_endpoint.call_with_http_info(**kwargs)

